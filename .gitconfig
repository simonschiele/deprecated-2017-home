[core]
    quotepath = off
[user]
    email = simon.schiele@ypsilon.net
    name = Simon Schiele
[merge]
    tool = vimdiff
[color]
    ui = auto
    interactive = auto
[alias]
    sortdiff = !sh -c 'git diff "$@" | grep "^[+-]" | sort --key=1.2 | uniq -u -s1'
    lastdiff = difftool HEAD^1..HEAD
    sdiff = diff --cached
    changed = diff --stat HEAD..origin/HEAD
    details = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
    plog = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    glog = log --graph
    lastlog = log --color -n 20 --pretty=tformat:\"%h - %an, %ar : %s\" HEAD^1..HEAD
    filelog = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat 
    rollback = checkout HEAD^1
    clone = clone
    wipe = reset â€“hard HEAD
    praise = blame
    merge = merge --ff
    pull = pull --ff
    grep = grep -Ii
    stat = status -sb
    lasttag = describe --tags --abbrev=0
    ignored = ls-files --others -i --exclude-standard
    ignore = !([ ! -r .gitignore ] && touch .gitignore) | echo $1 >>.gitignore
    all = "!git log --name-status --oneline --all | grep '^[A|M|D]' | awk '{print $2}' | sort -u"
    find = "!git ls-files | grep -i"
    graphviz = "!echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}';"
    new = !sh -c 'git log $1@{1}..$1@{0} "$@"'
    subdel = "!f(){ git rm --cached \"$1\";rm -r \"$1\";git config -f .gitmodules --remove-section \"submodule.$1\";git config -f .git/config --remove-section \"submodule.$1\";git add .gitmodules; }; f"
    serve = daemon --base-path=. --export-all --reuseaddr --informative-errors --verbose
    hub = daemon --base-path=. --export-all --enable=receive-pack --reuseaddr --informative-errors --verbose
[push]
    default = matching
