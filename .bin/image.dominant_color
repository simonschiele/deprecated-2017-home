#!/usr/bin/env python
#
# src: http://stackoverflow.com/questions/3241929/python-find-dominant-most-common-color-in-an-image
#

import struct
import Image
import scipy
import scipy.misc
import scipy.cluster
import sys
from os import path

NUM_CLUSTERS = 5

i = 0
for arg in sys.argv:
    i += 1
    if i > 1: 
        #print 'reading image: ' + arg

        im = Image.open(arg)
        im = im.resize((150, 150))      # optional, to reduce time
        ar = scipy.misc.fromimage(im)
        shape = ar.shape
        ar = ar.reshape(scipy.product(shape[:2]), shape[2])

        #print 'finding clusters'
        codes, dist = scipy.cluster.vq.kmeans(ar, NUM_CLUSTERS)
        #print 'cluster centres:\n', codes

        vecs, dist = scipy.cluster.vq.vq(ar, codes)         # assign codes
        counts, bins = scipy.histogram(vecs, len(codes))    # count occurrences

        index_max = scipy.argmax(counts)                    # find most frequent
        peak = codes[index_max]
        colour = ''.join(chr(c) for c in peak).encode('hex')
        print '%s #%s %s' % (peak, colour, arg)

